---
openapi: 3.0.0
info:
  title: 상품 API 문서
  description: 상품 API에 대한 문서
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/PachyuChepe/nodelv1/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:3000
paths:
  /api/products:
    get:
      summary: 상품 목록 조회
      description: 등록된 모든 상품을 조회합니다.
      responses:
        "200":
          description: 상품 목록 조회 성공
        "500":
          description: 서버 오류
    post:
      summary: 새 상품 등록
      description: 새로운 상품을 등록합니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_products_body'
        required: true
      responses:
        "201":
          description: 상품이 성공적으로 등록되었습니다.
        "400":
          description: 잘못된 데이터 형식
        "500":
          description: 서버 오류
  /api/products/{userItemId}:
    get:
      summary: 상품 상세 조회
      description: 특정 상품의 상세 정보를 조회합니다.
      parameters:
      - name: userItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: 상품 상세 정보 조회 성공
        "404":
          description: 상품을 찾을 수 없음
        "500":
          description: 서버 오류
    put:
      summary: 상품 정보 수정
      description: 특정 상품의 정보를 수정합니다.
      parameters:
      - name: userItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products_userItemId_body'
        required: true
      responses:
        "200":
          description: 상품 정보 수정 성공
        "400":
          description: 잘못된 데이터 형식
        "401":
          description: 권한이 없음
        "404":
          description: 상품을 찾을 수 없음
        "500":
          description: 서버 오류
    delete:
      summary: 상품 삭제
      description: 특정 상품을 삭제합니다.
      parameters:
      - name: userItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products_userItemId_body_1'
        required: true
      responses:
        "200":
          description: 상품 삭제 성공
        "401":
          description: 권한이 없음
        "404":
          description: 상품을 찾을 수 없음
        "500":
          description: 서버 오류
components:
  schemas:
    api_products_body:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        author:
          type: string
        password:
          type: string
        status:
          type: string
    products_userItemId_body:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        password:
          type: string
        status:
          type: string
    products_userItemId_body_1:
      type: object
      properties:
        password:
          type: string
